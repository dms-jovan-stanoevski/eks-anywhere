Install the NGINX ingress template
Ensure that redirect uri in keycloak is set to https
Ensure that the same ssl cert incluing entries for keycloak and kubeapps

Verified OK!!!

keycloakSslKey=$HOME/eks-anywhere/oidc/tls.key
keycloakSslCert=$HOME/eks-anywhere/oidc/tls.crt
kubectl create namespace kubeapps

kubectl create secret tls kubeapps.eksa.workload01.thecloudgarage.com-tls \
-n kubeapps --key=$keycloakSslKey --cert=$keycloakSslCert


helm install kubeapps bitnami/kubeapps --namespace kubeapps \
  --set ingress.enabled=true \
  --set ingress.tls=true \
  --set ingress.extraHosts[0].name=kubeapps.eksa.workload01.thecloudgarage.com \
  --set ingress.extraTls[0].secretName=kubeapps.eksa.workload01.thecloudgarage.com-tls \
  --set ingress.extraTls[0].hosts[0]=kubeapps.eksa.workload01.thecloudgarage.com \
  --set ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
  --set authProxy.enabled=true \
  --set authProxy.provider=oidc \
  --set authProxy.clientID=kubeapps \
  --set authProxy.clientSecret=XcmyPEEhkqnA1zB7C2MootlZYu3f490R \
  --set authProxy.cookieSecret=$(echo "not-good-secret" | base64) \
  --set authProxy.extraFlags="{--redirect-url=https://kubeapps.eksa.workload01.thecloudgarage.com/oauth2/callback,--ssl-insecure-skip-verify,--scope=openid email groups,--cookie-secure=false,--oidc-issuer-url=https://keycloak.oidc.thecloudgarage.com/auth/realms/master}"
